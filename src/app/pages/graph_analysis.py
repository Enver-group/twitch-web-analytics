import pandas as pd
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import networkx as nx
import seaborn as sns
import matplotlib.pyplot as plt
import matplotlib as mpl

import streamlit as st
import plotly.express as px
import plotly.io as pio
import os

from ..constants import *
from ...graph_utils import get_k_common_followers, get_top_followers, from_pandas_to_pyviz_net

pio.templates.default = "plotly_dark"

import streamlit.components.v1 as components
def pv_static(fig,name='graph'):
    #https://github.com/napoles-uach/stvis
    h1=fig.height
    h1=int(h1.replace('px',''))
    w1=fig.width
    w1=int(w1.replace('px',''))
    fig.show(name+'.html')
    return components.html(
        fig.html,height=h1+30, width=w1+30
    )


def set_graph_analysis(df):

    st.title('Graph Analysis of the Networks of Hispanic Twitch Streamers')
    st.subheader("How do streamers follow each other?")

    menu_items = ["PyViz", "Gephi"]
    menu_variables= st.radio(
        "",
        menu_items,#"Rating","Metascore", "Presupuesto", "RecaudaciÃ³n", "Beneficios", "ROI"),
    )
    if menu_items.index(menu_variables) == 0:
        with st.spinner("Loading plot..."):
            show_streamers_pyviz_graphs(df)
    else:
        # st.text("Sorry, this feature is not implemented yet")
        show_gephi_graphs()
            

def show_streamers_pyviz_graphs(df):
    # Define list of streamer to visualize in a graph
    streamer_list = ['auronplay', 'Rubius', 'TheGrefg', 'ibai',
                    'juansguarnizo', 'elded', 'SLAKUN10', 'coscu', 'Robleis', 'Alexby11']


    # Multiselect dropdown menu (returns a list)    
    selected_streamer = st.selectbox('Select streamer to visualize', streamer_list)
    image_col, _, _, _ = st.columns(4)
    image_col.image(df[df['name'] == selected_streamer]['profile_image_url'].values[0], width=100)

    row3_space1, row3_1, row3_space2, row3_2, row3_space3 = st.columns(
        (.1, 1.5, .5, 1.5, .1))
    
    with row3_1:
        st.subheader('Graph 1')
        st.markdown(explanations_of_graph_1)

        # if len(selected_streamer) == 0:
        #     st.text('Choose at least 1 streamer to visualize')

        # elif len(selected_streamer) > 1:
        #     st.text('Choose at most 1 streamer to visualize')
        # # Create network graph when user selects >= 1 item
        # else:
        df = get_top_followers(df.copy(),common_followers_with = selected_streamer)

        net1 = from_pandas_to_pyviz_net(df,emphasize_node=selected_streamer)

        pv_static(net1, name="reports/graph")


    with row3_2:
        st.subheader('Graph 2')
        st.markdown(explanations_of_graph_2)

        # if len(selected_streamer) == 0:
        #     st.text('Choose at least 1 streamer to visualize')

        # elif len(selected_streamer) > 1:
        #     st.text('Choose at most 1 streamer to visualize')
        # # Create network graph when user selects >= 1 item
        # else:
        df2 = get_k_common_followers("data/streamers.feather",common_followers_with = selected_streamer)

        net2 = from_pandas_to_pyviz_net(df2,emphasize_node=selected_streamer)
        
        pv_static(net2, name="reports/graph2")        
        
    
def show_gephi_graphs():
    st.subheader('Graphs Made with Gephi')
    # 2 columns showing the images of the graphs generated by Gephi
    image_ids = {
        '1qOLXeuFEFQUGOhbyEVlZpmHSBFZEy-6v' : 'Top 100 streamers',
        '1ivRn3VOoNoD8f-_LaViI4odpUZRGx_jK' : 'Top 100\'000 by Views',
        '1wp67_m3le7gnBgq5hpV8A0esZHE-1rnV' : 'Top 30\'000 by Followers',
        '1OvxmkWJFeWM3SqovNEKfnAcPfYXY27lF' : 'Infer Network',
        '1rBAvC-Yoqdj6wZ2ybZhCFYjEydneGyc4' : 'Ktigger Network',
        '13BogpGVUWwAgfcNCya0yKf-r_kFb3EQF' : 'Nare Network',
        '1KoH5IiCq4OT01vI-hKOTVXb7JjRwOqxs' : 'Davimen Network',
        '160bllFOG2UhrZqCZ8ioPhWlSUa-JQG1f' : 'Music',
        '1m5SNyNe4dsOL3ZBaX-A8qVeAZ5gQema3' : 'Minecraft',
        '1oR3PtAKy8Fwu85VAmU0Ks1NQk8mLJDeh' : 'LoL',
        '1PyvyQMP704icQDy3S_lEF4vBD19Ml0JD' : 'DIscussion | Just Chatting',
        '1PQvnT9uolchlgx5KFExtwQGGg_ZMUdFJ' : 'ASMR',
    }
    for i in range(len(image_ids)//2):
        col1, col2 = st.columns(2)
        # get the two images from the dictionary
        image_id1, image_id2 = list(image_ids.keys())[i*2:i*2+2]
        name1, name2 = image_ids[image_id1], image_ids[image_id2]
        with col1:
            st.image(f"https://drive.google.com/uc?id={image_id1}", caption=name1, use_column_width=True)
        with col2:
            st.image(f"https://drive.google.com/uc?id={image_id2}", caption=name2, use_column_width=True)
        
        
